buildscript {
    dependencies {
        def versions = new Properties()
        file('../versions.properties').withInputStream { versions.load(it) }
        classpath 'io.skippy:skippy-gradle:' + versions.skippy
    }
}

plugins {
    id 'java'
}

apply plugin: io.skippy.gradle.SkippyPlugin;

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

    testImplementation project(':skippy-junit5')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:' + versions.junit5
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + versions.junit5

    intTestImplementation project(':skippy-junit5')
    intTestImplementation 'org.junit.jupiter:junit-jupiter-api:' + versions.junit5
    intTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:' + versions.junit5

}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat 'FULL'
        showStandardStreams true
    }
    useJUnitPlatform()
}


configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()

    testLogging {
        events "passed"
    }
}

check.dependsOn integrationTest